package com.mortuusterra.managers;

import java.util.ArrayList;
import java.util.HashMap;

import org.bukkit.GameMode;
import org.bukkit.entity.Player;
import org.bukkit.scheduler.BukkitRunnable;
import org.bukkit.scheduler.BukkitTask;

import com.mortuusterra.MortuusTerraMain;

public class MTRadiation {

	private MortuusTerraMain main;

	private HashMap<Player, BukkitTask> map = new HashMap<Player, BukkitTask>();
	private ArrayList<MTGeck> MTGeckList = new ArrayList<MTGeck>();

	public MTRadiation(MortuusTerraMain m) {
		this.main = m;
	}

	public void addPlayer(Player p) {
		map.put(p, new BukkitRunnable() {

			@Override
			public void run() {
				if(p.getGameMode().equals(GameMode.CREATIVE) || p.getGameMode().equals(GameMode.SPECTATOR)) {
					return;
				}
				if (playerCheck(p)) {
					new BukkitRunnable() {
						
						@Override
						public void run() {
							p.damage(1.5);							
						}
					}.runTask(main);
				}

			}
		}.runTaskTimerAsynchronously(main, 20, 60)); // wait 1 second(20 ticks) to run the task timer, and run the task
														// timer again after 3 seconds(60 ticks)
	}
	
	public void removePlayer(Player p) {
		map.get(p).cancel();
		map.remove(p);
		return;
	}

	// check if the player can be damaged by radiation
	public boolean playerCheck(Player p) {
		if(isPlayerInRange(p)) {
			return true;
		}
		return false;
	}
	
	public void addGeck(MTGeck geck) {
		if(MTGeckList.contains(geck)) {
			return;
		}
		MTGeckList.add(geck);
		return;
	}
	
	public void removeGeck(MTGeck geck) {
		if(!MTGeckList.contains(geck)) {
			return;
		}
		MTGeckList.remove(geck);
		return;
	}
	
	public boolean isPlayerInRange(Player p) {
		for(MTGeck mtgeck : MTGeckList) {
			if (p.getLocation().distance(mtgeck.getGeckLocation()) <= 10) {
				p.sendMessage("You are in range of a GECK.");
				return true;
			}
		}
		p.sendMessage("You are not in range of a GECK.");
		return false;
	}

}
