package com.mortuusterra.managers;

import java.util.ArrayList;

import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.World;
import org.bukkit.block.Block;
import org.bukkit.entity.Player;
import org.bukkit.inventory.FurnaceInventory;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.InventoryHolder;
import org.bukkit.inventory.ItemStack;
import org.bukkit.scheduler.BukkitRunnable;
import org.bukkit.scheduler.BukkitTask;

import com.mortuusterra.MortuusTerraMain;

public class MTGenerator {
	private Boolean powered = false;
	private boolean valid = false;
	private Location generatorLocation;
	private World world;

	private final int blockCount = 28;

	private Player owner;
	private ArrayList<Player> allowedPlayers = new ArrayList<Player>();
	private ArrayList<Block> blocks = new ArrayList<Block>();
	private BukkitTask run;

	public MTGenerator(Player owner, Location location, ArrayList<Block> mtgeneratorBlocks) {
		this.generatorLocation = location;
		this.blocks = mtgeneratorBlocks;
		this.owner = owner;
	}

	public ArrayList<Block> getBlocks() {
		return blocks;
	}

	public Boolean getPowered() {
		return powered;
	}

	public void setPowered(Boolean powered) {
		this.powered = powered;
	}

	public boolean isValid() {
		return valid;
	}

	public void setValid(boolean valid) {
		this.valid = valid;
	}

	public World getWorld() {
		return world;
	}

	public void setWorld(World world) {
		this.world = world;
	}

	public Location getGeneratorLocation() {
		return generatorLocation;
	}
	
	public ArrayList<Player> getAllowedPlayers() {
		return allowedPlayers;
	}

	public Player getOwner() {
		return owner;
	}

	private Inventory getFurnace() {
		for (Block b : blocks) {
			if (b.getType().equals(Material.FURNACE)) {
				InventoryHolder ih = (InventoryHolder) b.getState();
				return ih.getInventory();
			}
		}
		return null;
	}

	public void startWaitForCoal(MortuusTerraMain main, Player p) {
		this.run = new BukkitRunnable() {

			@Override
			public void run() {
				if (isBroken()) {
					p.sendMessage("Your Generator is broken, it is not generating power anymore until you fix it!!");
					return;
				}
				if (getFurnace().contains(Material.COAL)) {
					getFurnace().removeItem(new ItemStack(Material.COAL, 1));
				} else {
					p.sendMessage("Generator needs coal!");
				}

			}
		}.runTaskTimerAsynchronously(main, 10, 50);
	}

	public boolean isBroken() {
		if (getBlocks().size() != 28) {
			return true;
		}
		return false;
	}

}
